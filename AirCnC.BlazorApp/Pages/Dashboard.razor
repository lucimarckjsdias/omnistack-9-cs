@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@page "/dashboard"

<ul class="spot-list">
    @if (Spots != null)
    {
        foreach (var spot in Spots)
        {
            <li @key="spot.Guid">
                <header style="background-image: url(@($"\"https://localhost:5001{spot.Thumbnail}\"")" />
                <strong>@(spot.Company)</strong>
                <span>@(spot.Price > 0 ? $"R$ {spot.Price}" : "GRATUITO")</span>
            </li>
        }
    }
</ul>

<NavLink href="/new">
    <button class="btn">Cadastrar novo spot</button>
</NavLink>

@code {
    private string UserGuid { get; set; }
    private IEnumerable<Spot> Spots { get; set; }

    protected override async Task OnInitializedAsync()
    {
        UserGuid = await LocalStorage.GetItemAsync<string>("user");
        Console.WriteLine($"Usuário Atual: {UserGuid}");

        using (var client = new HttpClient())
        {
            client.BaseAddress = new Uri("https://localhost:5001/api");
            client.DefaultRequestHeaders.Add("userGuid", UserGuid);

            var response = await client.GetAsync("/dashboard");
            Spots = JsonConvert.DeserializeObject<IEnumerable<Spot>>(await response.Content.ReadAsStringAsync());
        }
    }
}